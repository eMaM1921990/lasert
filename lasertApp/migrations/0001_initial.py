# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-24 17:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to=b'clients/', verbose_name='Client Logo')),
                ('url', models.URLField(verbose_name='Client website')),
            ],
            options={
                'db_table': 'clients',
                'managed': True,
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Mailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=150)),
                ('group', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'mailers',
                'managed': True,
                'verbose_name_plural': 'mailers',
            },
        ),
        migrations.CreateModel(
            name='Partners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to=b'partners/', verbose_name='Partner Logo')),
                ('url', models.URLField(verbose_name='partner website')),
            ],
            options={
                'db_table': 'partners',
                'managed': True,
                'verbose_name_plural': 'Partners',
            },
        ),
        migrations.CreateModel(
            name='Recommends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('company', models.CharField(max_length=150)),
                ('comment', models.TextField()),
                ('logo', models.ImageField(upload_to=b'recommend/', verbose_name='Partner Logo')),
            ],
            options={
                'db_table': 'recommendations',
                'managed': True,
                'verbose_name_plural': 'Recommendations',
            },
        ),
        migrations.CreateModel(
            name='Serivces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=150)),
                ('logo', models.ImageField(upload_to=b'service/')),
            ],
            options={
                'db_table': 'services',
                'managed': True,
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='SolutionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'solution_category',
                'managed': True,
                'verbose_name_plural': 'Solution category',
            },
        ),
        migrations.CreateModel(
            name='Solutions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('logo', models.ImageField(upload_to=b'service/')),
                ('show_in_home_page', models.BooleanField(default=False)),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, related_name='solution_category', to='lasertApp.SolutionCategory')),
            ],
            options={
                'db_table': 'solutions',
                'managed': True,
                'verbose_name_plural': 'Solutions',
            },
        ),
    ]
